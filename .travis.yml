language: node_js
node_js:
  - 13

services:
  - docker

env:
  DOCKER_COMPOSE_VERSION: 2.10.2

before_install:
  - sudo rm /usr/local/bin/docker-compose
  - curl -L https://github.com/docker/compose/releases/download/${DOCKER_COMPOSE_VERSION}/docker-compose-`uname -s`-`uname -m` > docker-compose
  - chmod +x docker-compose
  - sudo mv docker-compose /usr/local/bin

# Pre-testing installs
install:
  - echo "nothing needs to be installed"

# Scripts to be run such as tests
before_script:
  - echo "no tests"

script:
  - docker --version # print the version for logging
  - docker compose --version
  - docker build -t udagram-api-feed ./udagram-api-feed
  - docker build -t udagram-api-user ./udagram-api-user
  - docker build -t reverseproxy ./udagram-reverseproxy
  - docker build -t udagram-frontend ./udagram-frontend
  # tagging docker build
  - docker tag udagram-api-feed lodakins/udagram-api-feed:v1
  - docker tag udagram-api-user lodakins/udagram-api-user:v1
  - docker tag udagram-frontend lodakins/udagram-frontend:v1
  - docker tag reverseproxy lodakins/reverseproxy:v1

# Tasks to perform after the process is successful. Formatting the Docker username and password as below enables you to programmatically log in without having the password exposed in logs.
after_success:
  - echo "$DOCKER_PASSWORD" | docker login -u "$DOCKER_USERNAME" --password-stdin
  - docker push lodakins/reverseproxy:v1
  - docker push lodakins/udagram-api-feed:v1
  - docker push lodakins/udagram-api-user:v1
  - docker push lodakins/udagram-frontend:v1
  